//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using MTS_CRM.DB;

namespace MTS_CRM.DESKTOP.CustomerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomerService.ICustomerService")]
    public interface ICustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/CreateCustomerCompany", ReplyAction="http://tempuri.org/ICustomerService/CreateCustomerCompanyResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MTS_CRM.DB.Company))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MTS_CRM.DB.Private))]
        void CreateCustomerCompany(MTS_CRM.DB.Customer cust, MTS_CRM.DB.Company comp, MTS_CRM.DB.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/CreateCustomerCompany", ReplyAction="http://tempuri.org/ICustomerService/CreateCustomerCompanyResponse")]
        System.Threading.Tasks.Task CreateCustomerCompanyAsync(MTS_CRM.DB.Customer cust, MTS_CRM.DB.Company comp, MTS_CRM.DB.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/CreateCustomerPrivate", ReplyAction="http://tempuri.org/ICustomerService/CreateCustomerPrivateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MTS_CRM.DB.Company))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MTS_CRM.DB.Private))]
        void CreateCustomerPrivate(MTS_CRM.DB.Customer cust, MTS_CRM.DB.Private custPriv, MTS_CRM.DB.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/CreateCustomerPrivate", ReplyAction="http://tempuri.org/ICustomerService/CreateCustomerPrivateResponse")]
        System.Threading.Tasks.Task CreateCustomerPrivateAsync(MTS_CRM.DB.Customer cust, MTS_CRM.DB.Private custPriv, MTS_CRM.DB.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/CreateCustomer", ReplyAction="http://tempuri.org/ICustomerService/CreateCustomerResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MTS_CRM.DB.Company))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MTS_CRM.DB.Private))]
        void CreateCustomer(MTS_CRM.DB.Customer cust, MTS_CRM.DB.Private custPriv, MTS_CRM.DB.Company comp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/CreateCustomer", ReplyAction="http://tempuri.org/ICustomerService/CreateCustomerResponse")]
        System.Threading.Tasks.Task CreateCustomerAsync(MTS_CRM.DB.Customer cust, MTS_CRM.DB.Private custPriv, MTS_CRM.DB.Company comp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomerService/UpdateCustomerResponse")]
        void UpdateCustomer(MTS_CRM.DTO.CustomerDTO cust);
        void UpdatePrivateCustomer(string email, Private privNew);
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomerService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task UpdateCustomerAsync(MTS_CRM.DTO.CustomerDTO cust);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/RemoveCustomer", ReplyAction="http://tempuri.org/ICustomerService/RemoveCustomerResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MTS_CRM.DB.Company))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MTS_CRM.DB.Private))]
        void RemoveCustomer(MTS_CRM.DB.Customer cust);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/RemoveCustomer", ReplyAction="http://tempuri.org/ICustomerService/RemoveCustomerResponse")]
        System.Threading.Tasks.Task RemoveCustomerAsync(MTS_CRM.DB.Customer cust);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomerEmail", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerEmailResponse")]
        MTS_CRM.DTO.CustomerDTO GetCustomerEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomerEmail", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerEmailResponse")]
        System.Threading.Tasks.Task<MTS_CRM.DTO.CustomerDTO> GetCustomerEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomerById", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerByIdResponse")]
        MTS_CRM.DTO.CustomerDTO GetCustomerById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetCustomerById", ReplyAction="http://tempuri.org/ICustomerService/GetCustomerByIdResponse")]
        System.Threading.Tasks.Task<MTS_CRM.DTO.CustomerDTO> GetCustomerByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllCustomers", ReplyAction="http://tempuri.org/ICustomerService/GetAllCustomersResponse")]
        MTS_CRM.DB.Customer[] GetAllCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/GetAllCustomers", ReplyAction="http://tempuri.org/ICustomerService/GetAllCustomersResponse")]
        System.Threading.Tasks.Task<MTS_CRM.DB.Customer[]> GetAllCustomersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerServiceChannel : MTS_CRM.DESKTOP.CustomerService.ICustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerServiceClient : System.ServiceModel.ClientBase<MTS_CRM.DESKTOP.CustomerService.ICustomerService>, MTS_CRM.DESKTOP.CustomerService.ICustomerService {
        
        public CustomerServiceClient() {
        }
        
        public CustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateCustomerCompany(MTS_CRM.DB.Customer cust, MTS_CRM.DB.Company comp, MTS_CRM.DB.Location location) {
            base.Channel.CreateCustomerCompany(cust, comp, location);
        }
        
        public System.Threading.Tasks.Task CreateCustomerCompanyAsync(MTS_CRM.DB.Customer cust, MTS_CRM.DB.Company comp, MTS_CRM.DB.Location location) {
            return base.Channel.CreateCustomerCompanyAsync(cust, comp, location);
        }
        
        public void CreateCustomerPrivate(MTS_CRM.DB.Customer cust, MTS_CRM.DB.Private custPriv, MTS_CRM.DB.Location location) {
            base.Channel.CreateCustomerPrivate(cust, custPriv, location);
        }
        
        public System.Threading.Tasks.Task CreateCustomerPrivateAsync(MTS_CRM.DB.Customer cust, MTS_CRM.DB.Private custPriv, MTS_CRM.DB.Location location) {
            return base.Channel.CreateCustomerPrivateAsync(cust, custPriv, location);
        }
        
        public void CreateCustomer(MTS_CRM.DB.Customer cust, MTS_CRM.DB.Private custPriv, MTS_CRM.DB.Company comp) {
            base.Channel.CreateCustomer(cust, custPriv, comp);
        }

        public void UpdatePrivateCustomer(string oldEmail, MTS_CRM.DB.Private newPrivate)
        {
            base.Channel.UpdatePrivateCustomer(oldEmail, newPrivate);
        }

        public System.Threading.Tasks.Task CreateCustomerAsync(MTS_CRM.DB.Customer cust, MTS_CRM.DB.Private custPriv, MTS_CRM.DB.Company comp) {
            return base.Channel.CreateCustomerAsync(cust, custPriv, comp);
        }
        
        public void UpdateCustomer(MTS_CRM.DTO.CustomerDTO cust) {
            base.Channel.UpdateCustomer(cust);
        }
        
        public System.Threading.Tasks.Task UpdateCustomerAsync(MTS_CRM.DTO.CustomerDTO cust) {
            return base.Channel.UpdateCustomerAsync(cust);
        }
        
        public void RemoveCustomer(MTS_CRM.DB.Customer cust) {
            base.Channel.RemoveCustomer(cust);
        }
        
        public System.Threading.Tasks.Task RemoveCustomerAsync(MTS_CRM.DB.Customer cust) {
            return base.Channel.RemoveCustomerAsync(cust);
        }
        
        public MTS_CRM.DTO.CustomerDTO GetCustomerEmail(string email) {
            return base.Channel.GetCustomerEmail(email);
        }
        
        public System.Threading.Tasks.Task<MTS_CRM.DTO.CustomerDTO> GetCustomerEmailAsync(string email) {
            return base.Channel.GetCustomerEmailAsync(email);
        }
        
        public MTS_CRM.DTO.CustomerDTO GetCustomerById(int id) {
            return base.Channel.GetCustomerById(id);
        }
        
        public System.Threading.Tasks.Task<MTS_CRM.DTO.CustomerDTO> GetCustomerByIdAsync(int id) {
            return base.Channel.GetCustomerByIdAsync(id);
        }
        
        public MTS_CRM.DB.Customer[] GetAllCustomers() {
            return base.Channel.GetAllCustomers();
        }
        
        public System.Threading.Tasks.Task<MTS_CRM.DB.Customer[]> GetAllCustomersAsync() {
            return base.Channel.GetAllCustomersAsync();
        }
    }
}
