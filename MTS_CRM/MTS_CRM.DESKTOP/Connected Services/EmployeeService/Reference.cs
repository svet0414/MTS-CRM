//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MTS_CRM.DESKTOP.EmployeeService {
    using System.Runtime.Serialization;
    using System;
    using MTS_CRM.DB;

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeDTO", Namespace="http://schemas.datacontract.org/2004/07/MTS_CRM.DTO")]
    [System.SerializableAttribute()]
    public partial class EmployeeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeFNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeLNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeePhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((this.CustIDField.Equals(value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeEmail {
            get {
                return this.EmployeeEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeEmailField, value) != true)) {
                    this.EmployeeEmailField = value;
                    this.RaisePropertyChanged("EmployeeEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeFName {
            get {
                return this.EmployeeFNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeFNameField, value) != true)) {
                    this.EmployeeFNameField = value;
                    this.RaisePropertyChanged("EmployeeFName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeLName {
            get {
                return this.EmployeeLNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeLNameField, value) != true)) {
                    this.EmployeeLNameField = value;
                    this.RaisePropertyChanged("EmployeeLName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeePhoneNumber {
            get {
                return this.EmployeePhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeePhoneNumberField, value) != true)) {
                    this.EmployeePhoneNumberField = value;
                    this.RaisePropertyChanged("EmployeePhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeService.IEmployeeService")]
    public interface IEmployeeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/CreateEmployee", ReplyAction="http://tempuri.org/IEmployeeService/CreateEmployeeResponse")]
        void CreateEmployee(MTS_CRM.DB.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/CreateEmployee", ReplyAction="http://tempuri.org/IEmployeeService/CreateEmployeeResponse")]
        System.Threading.Tasks.Task CreateEmployeeAsync(MTS_CRM.DB.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/UpdateEmployee", ReplyAction="http://tempuri.org/IEmployeeService/UpdateEmployeeResponse")]
        void UpdateEmployee(MTS_CRM.DTO.EmployeeDTO emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/UpdateEmployee", ReplyAction="http://tempuri.org/IEmployeeService/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task UpdateEmployeeAsync(MTS_CRM.DTO.EmployeeDTO emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/RemoveEmployee", ReplyAction="http://tempuri.org/IEmployeeService/RemoveEmployeeResponse")]
        void RemoveEmployee(MTS_CRM.DB.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/RemoveEmployee", ReplyAction="http://tempuri.org/IEmployeeService/RemoveEmployeeResponse")]
        System.Threading.Tasks.Task RemoveEmployeeAsync(MTS_CRM.DB.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmpByUsername", ReplyAction="http://tempuri.org/IEmployeeService/GetEmpByUsernameResponse")]
        MTS_CRM.DTO.EmployeeDTO GetEmpByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmpByUsername", ReplyAction="http://tempuri.org/IEmployeeService/GetEmpByUsernameResponse")]
        System.Threading.Tasks.Task<MTS_CRM.DTO.EmployeeDTO> GetEmpByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmpById", ReplyAction="http://tempuri.org/IEmployeeService/GetEmpByIdResponse")]
        MTS_CRM.DTO.EmployeeDTO GetEmpById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmpById", ReplyAction="http://tempuri.org/IEmployeeService/GetEmpByIdResponse")]
        System.Threading.Tasks.Task<MTS_CRM.DTO.EmployeeDTO> GetEmpByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmpByFirstName", ReplyAction="http://tempuri.org/IEmployeeService/GetEmpByFirstNameResponse")]
        MTS_CRM.DTO.EmployeeDTO GetEmpByFirstName(string firstName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetEmpByFirstName", ReplyAction="http://tempuri.org/IEmployeeService/GetEmpByFirstNameResponse")]
        System.Threading.Tasks.Task<MTS_CRM.DTO.EmployeeDTO> GetEmpByFirstNameAsync(string firstName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetAllEmployeesByFirstName", ReplyAction="http://tempuri.org/IEmployeeService/GetAllEmployeesByFirstNameResponse")]
        MTS_CRM.DB.Employee[] GetAllEmployeesByFirstName(string firstName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/GetAllEmployeesByFirstName", ReplyAction="http://tempuri.org/IEmployeeService/GetAllEmployeesByFirstNameResponse")]
        System.Threading.Tasks.Task<MTS_CRM.DB.Employee[]> GetAllEmployeesByFirstNameAsync(string firstName);
        void UpdateEmployee(Employee empNew);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeServiceChannel : MTS_CRM.DESKTOP.EmployeeService.IEmployeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeServiceClient : System.ServiceModel.ClientBase<MTS_CRM.DESKTOP.EmployeeService.IEmployeeService>, MTS_CRM.DESKTOP.EmployeeService.IEmployeeService {
        
        public EmployeeServiceClient() {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateEmployee(MTS_CRM.DB.Employee emp) {
            base.Channel.CreateEmployee(emp);
        }
        
        public System.Threading.Tasks.Task CreateEmployeeAsync(MTS_CRM.DB.Employee emp) {
            return base.Channel.CreateEmployeeAsync(emp);
        }
        
        public void UpdateEmployee(MTS_CRM.DTO.EmployeeDTO emp) {
            base.Channel.UpdateEmployee(emp);
        }
        
        public System.Threading.Tasks.Task UpdateEmployeeAsync(MTS_CRM.DTO.EmployeeDTO emp) {
            return base.Channel.UpdateEmployeeAsync(emp);
        }
        
        public void RemoveEmployee(MTS_CRM.DB.Employee emp) {
            base.Channel.RemoveEmployee(emp);
        }
        
        public System.Threading.Tasks.Task RemoveEmployeeAsync(MTS_CRM.DB.Employee emp) {
            return base.Channel.RemoveEmployeeAsync(emp);
        }
        
        public MTS_CRM.DTO.EmployeeDTO GetEmpByUsername(string username) {
            return base.Channel.GetEmpByUsername(username);
        }
        
        public System.Threading.Tasks.Task<MTS_CRM.DTO.EmployeeDTO> GetEmpByUsernameAsync(string username) {
            return base.Channel.GetEmpByUsernameAsync(username);
        }
        
        public MTS_CRM.DTO.EmployeeDTO GetEmpById(int id) {
            return base.Channel.GetEmpById(id);
        }
        
        public System.Threading.Tasks.Task<MTS_CRM.DTO.EmployeeDTO> GetEmpByIdAsync(int id) {
            return base.Channel.GetEmpByIdAsync(id);
        }
        
        public MTS_CRM.DTO.EmployeeDTO GetEmpByFirstName(string firstName) {
            return base.Channel.GetEmpByFirstName(firstName);
        }
        
        public System.Threading.Tasks.Task<MTS_CRM.DTO.EmployeeDTO> GetEmpByFirstNameAsync(string firstName) {
            return base.Channel.GetEmpByFirstNameAsync(firstName);
        }
        
        public MTS_CRM.DB.Employee[] GetAllEmployeesByFirstName(string firstName) {
            return base.Channel.GetAllEmployeesByFirstName(firstName);
        }
        
        public System.Threading.Tasks.Task<MTS_CRM.DB.Employee[]> GetAllEmployeesByFirstNameAsync(string firstName) {
            return base.Channel.GetAllEmployeesByFirstNameAsync(firstName);
        }

        public void UpdateEmployee(Employee empNew)
        {
            throw new NotImplementedException();
        }
    }
}
